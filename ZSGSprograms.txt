import java.util.*;
public class zoho1  //decimal to binary,octal,hexa
{
    public static void main(String[] args) {
        int number=37;

        //decimal to binary
        int n=number;
        int Binary=0,i=1;
        while(n!=0)
        {
           Binary+=n%2*i;
           n=n/2;
           i*=10;
        }
        System.out.println("Binary of "+number+" is :" +Binary);

        //decimal to octal
        n=number;
        int Octal=0;i=1;
        while(n!=0)
        {
            Octal+=n%8*i;
            n=n/8;
            i*=10;
        }
        System.out.println("Octal of "+number+" is :"+Octal);

        //decimal to hexa
        n=number;
        String Hexa="";
        while(n!=0)
        {
        int Value=n;
          Value=n%16;
            if(Value==10)
            {
                Hexa+="A";
            }
            else if(Value==11)
            {
                Hexa+="B";
            }
             else if(Value==12)
            {
                Hexa+="C";
            }
             else if(Value==13)
            {
                Hexa+="D";
            }
             else if(Value==14)
            {
                Hexa+="E";
            }
             else if(Value==15)
            {
                Hexa+="F";
            }
            else
            {
                Hexa+=String.valueOf(Value);
            }
            n/=16;
        }
        System.out.println("Hexa of "+number+" is :"+Hexa);
        
    }
    
}
//---------------------------------------------------------------------------------------
 class zoho2 //circumference of square
{
     public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter the side of square : ");
        int a=sc.nextInt();
        int Cir=4*a;
        System.out.println("Circumference of Square: "+Cir);
        
    }
}
//------------------------------------------------------------------------------------------
class zoho3 //circumferce of rectangle
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println( "Enter the breath & height of Rectangle:");
        int b=sc.nextInt();
        int h=sc.nextInt();
        int Cir=2*(b+h);
        System.out.println("Circumference of Rectangle: "+Cir);
    }
}
//--------------------------------------------------------------------------------------------
class zoho4  //circumference of Cylinder
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Radius: ");
        double r=sc.nextDouble();
        double Cir=2*3.14*r;
        System.out.println("Circumference of Cylinder : "+Cir);
    } 
}
//-------------------------------------------------------------------------------------------
class zoho5 //division and addition table
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number");
        int n=sc.nextInt();
        System.out.println("Addition table");
        for(int i=1;i<=10;i++)
        {
            System.out.println(n+" + "+i+" = "+(n+i));
        }
        System.out.println("----------------------");

        System.out.println("Division Table");
        for(int i=1;i<=10;i++)
        {
            System.err.println(n*i+" / "+n+" = "+i );
        }


    }
}
//-----------------------------------------------------------------------------
class zoho6 //ascii value of character
{
    public static void main(String[] args) {
        char c='A';
        for(int i=c;i<c+26;i++)
        {
            System.out.println(  (char)i +" - "+i);
        }
    }
}
//--------------------------------------------------------------------------
class zoho7//Find reminder and quotient
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Dividend");
        int D=sc.nextInt();
        System.out.println("Enter the Divisor");
        int d=sc.nextInt();
        int reminder=D%d;
        int quotient=D/d;

        System.out.println("Reminder : "+reminder+"\nQuotient : "+quotient);


    }
}
//----------------------------------------------------------------------------------------
class zoho8 //long & double demonstrate
{
    public static void main(String[] args) {
        long a=32;
        double A=32;
        float b=32;
        System.out.println("long: "+a+"\ndouble: "+A+"\nfloat: "+b);
    }
}
//--------------------------------------------------------------------------------------
class zoho9//swapping two numbers
{
    public static void main(String[] args) {
        int a=30;
        int b=50;
        System.out.println("Before Swap a="+a+" b="+b);
        a=a^b;
        b=a^b;
        a=a^b;
        System.out.println("After Swap a="+a+" b="+b);
    }
}
//-------------------------------------------------------------------------------------------
class zoho10 //check even or odd
{
    public static void main(String[] args) {
        int n =19;
        if(n%2==0)
        {
          System.out.println(n+" is an Even number");
        }
        else
        {
            System.out.println(n+ " is a Odd number");
        }
    }
}
//------------------------------------------------------------------------------------------
class zoho11 //check vowel or consonent
{
    public static void main(String[] args) {
        char ch='u';
        if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u' || ch=='A' || ch=='E'|| ch=='I' || ch=='O' ||ch=='U')
        {
            System.out.println(ch+ "  is a vowel");
        }
        else
        {
            System.out.println(ch+ " is a consonent");
        }
    }
}
//---------------------------------------------------------------------------------------------
class zoho12
{
    public static void main(String[] args) {
        int a=10;
        int b=9;
        int c=56;
        int d=3;
        if(a>b && a>c && a>d)
        {
            System.out.println(a+" is the largest number");

        }
        else if(b>c && b>d && b>a)
         {
            System.out.println(b+" is the largest number");
        }
        else if(c>b && c>a && c>d )
        {
            System.out.println(c+ " is the largest number");
        }
        else
        {
            System.out.println(d+ " is the largest number");
        }
    }
}
//------------------------------------------------------------------------------------------
class zoho13 //roots of quodratic equation
{
    public static void main(String[] args) {
        int a=10;
        int b=7;
        int c=3;
        System.out.println("The Quodratic Equation "+a+"x*x + "+b+"x + "+c);
        if((b*b)-(4*a*c) >0)
        {
            System.out.println("The Equation is real");
        }
        else if((b*b)-(4*a*c) <0)
        {
             System.out.println("The Equation is imaginary");
        }
        else
        {
            System.out.println("The Equation is equal");
        }
    }
}
//------------------------------------------------------------------------------
class zoho14 //positive or negative
{
    public static void main(String[] args) {
        int a=-54;
        if(a>0)
        {
            System.out.println(a+" is a positive integer");
        }
        else
        {
            System.out.println(a+" is a negative integer");
        }
    }
}
//----------------------------------------------------------------------------------
class zoho15 //check alphabet or not
{
    public static void main(String[] args) {
        char ch=',';
        if((ch>='a' && ch<='z') || ch>='A' &&  ch<='Z')
        {
          System.out.println(ch+ " is an Alphabet");
        }
        else
        {
            System.out.println(ch+" is not an Alphabet");
        }
    }
}//---------------------------------------------------------------------------------
class zoho16 //sum of natural numbers and find smallest digit of sum
{
    public static void main(String[] args) {
        int n=11;
        int sum=(n*(n+1))/2;
       System.out.println("sum of "+n+" numbers "+sum);
       int small=9;
       while(sum>0)
       {
        int digit=sum%10;
        small=Math.min(small,digit);
        sum=sum/10;
       }
       System.out.println("The smallest digit in th sum "+small);
    }
}
//-----------------------------------------------------------------
class zoho17 //conditional Operator(if-else)
{
    public static void main(String[] args) {
        int a=10;
        int b=56;
        if(a<b)
        {
            System.out.println("The smallest "+a);
        }
        else
        {
            System.out.println("The smallest "+b);
        }
    }
}
//-------------------------------------------------------------------------------------
class  zoho18 //space between concentric circle
{
public static void main(String[] args) {
    int Radius=35;
    int radius=30;
    double Area=2*3.14*Radius;
    double area=2*3.14*radius;

    double Space=Area-area;
    System.out.println("Space between Concentric Circles: "+Space);
}
}
//--------------------------------------------------------------------------------------
class zoho19  //increment decrement operations
{
public static void main(String[] args) {
    int a=10;
    int b=5;
    int result=++a - --b;
   System.out.println("++a - --b  = "+result);

    a=10;
    b=5;
    result= a-- % b++;
    System.out.println("a-- % b++ = "+result);

    a=10;
    b=5;
    result=a*=b+=5;
   System.out.println("a*=b+=5  ="+result);
  
   result=69>>>2;
   System.out.println("69>>>2  = " +result);
}
}
//-------------------------------------------------------------------------------
class zoho20 //a=28 find (a+=++a + ++a + --a + a--)
{
public static void main(String[] args) {
    int a=28;
    a+=++a + ++a + --a + a--;
    System.out.println("a = "+a);
}
}
//------------------------------------------------------------------------------
class zoho21 //Evaluate (x=++x*2+3*--x)
{
public static void main(String[] args) {
    int x=10;
    x=++x*2+3*--x;
    System.out.println("x = "+x);

}
}
//---------------------------------------------------------------------------------
class zoho22 //Evaluate y=10,  z=(++y * (y++ + 5))
{
public static void main(String[] args) {
    int y=10;
    int z=(++y * (y++ + 5));
    System.out.println("z = "+z);

}
}
//------------------------------------------------------------------------------------
class zoho24 //Evaluate x=5 find x1=++x - x++ + --x
{
public static void main(String[] args) {
int x=5;
int x1=++x - x++ + --x;
System.out.println("x1 = "+x1);
    
}
}
//----------------------------------------------------------------------------------------
class zoho25 //evaluate final keyword
{
public static void main(String[] args) {
    final int a=100;
    //System.out.println(++a); this makes compile error
    System.out.println(a);
}
}
//--------------------------------------------------------------------------------------
class zoho26// merged array,repeated array
{
    public static void main(String[] args) {
        int a[]={2,3,5,6,7,8,11,13};
        int b[]={2,3,4,5,6,7,8,9,10,15};
        int n=a.length;
        int m=b.length;
        int[] merged=new int[n+m];
        int j=0;
        for(int i=0;i<n;i++)
        {
            merged[j++]=a[i];
        }
        for(int i=0;i<m;i++)
        {
            merged[j++]=b[i];
        }
        Arrays.sort(merged);
        int k=0,l=0;
        int[] repeat=new int[j];
        for(int i=1;i<j;i++)
        {
            if(merged[i]!=merged[i-1])
            {
                merged[k++]=merged[i-1];
            }
            else if(merged[i]==merged[i-1])

            {
              repeat[l++]=merged[i-1];
            }
        }
        System.out.println("Merged Array");
        for(int i=0;i<k;i++)
        {
            System.out.print(merged[i]+" ");
        }
        System.err.println();
        System.out.println("Repeated element");
        for(int i=0;i<l;i++)
        {
           System.out.print(repeat[i]+" ");
        }
    }
}
//----------------------------------------------------------------------------------
class zoho27//rotate multidimensional array(right)
{
    public static void main(String[] args) {
        int a[][]={{1,2},{3,4}};
        int n=a.length;
        int m=a[0].length;
        int[][] rotate=new int[n][m];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                rotate[j][2-i-1]=a[i][j];
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                System.out.print(rotate[i][j]+" ");
            }
            System.out.println();
        }
    


    }
}
//------------------------------------------------------------------
class zoho28//rearrage array first least element then maximum element order
{
    public static void main(String[] args) {
        int[] nums={2,1,3,7,5,6,4};
        Arrays.sort(nums);
        int[] rearrange=new int[nums.length];
       int i=0,j=nums.length-1;
       int k=0;
        while(i<j)
        {
            rearrange[k++]=nums[i];
            rearrange[k++]=nums[j];
            i++;
            j--;
        }
        for(i=0;i<k;i++)
        {
            System.out.print(rearrange[i]+" ");
        }
    }
}//------------------------------------------------------------------
class zoho29//factorial ofan number & reverse that factorial number
{
    public static void main(String[] args) {
        int n=5;
        int fact=1;
        while(n>0)
        {
            fact=fact*n;
            n--;
        }
        System.out.println("Factorial of "+n+" is "+fact);
        int num=fact;
        int rev=0;
        while(num>0)
        {
            int digit=num%10;
            rev=rev*10+digit;
            num=num/10;
        }
        System.out.println("Reverse of Factorial Number: "+rev);

    }

}
//----------------------------------------------------------
class zoho30 //sum  of even position element
{
    public static void main(String[] args) {
            int[] nums={1,3,4,2,5,6,7,8,9};
            int sum=0;
            for(int i=0;i<nums.length;i++)
            {
                if(i%2==0)
                {
                    sum+=nums[i];
                }
            }
            System.out.println("sum of even position element "+sum);
    }
}
//------------------------------------------------------------------
class zoho31//sum  of odd position element
{
    public static void main(String[] args) {
            int[] nums={1,3,4,2,5,6,7,8,9};
            int sum=0;
            for(int i=0;i<nums.length;i++)
            {
                if(i%2!=0)
                {
                    sum+=nums[i];
                }
            }
            System.out.println("sum of odd position element "+sum);
    }
}
//-------------------------------------------------------------------
class zoho32//second largest number
{
    public static void main(String[] args) {
            int[] nums={1,3,4,2,5,6,7,8,9};
            Arrays.sort(nums);
            System.out.println("Second largest number: "+nums[nums.length-2]);
    }
}
//------------------------------------------------------------------------
class zoho33//second smallest number
{
    public static void main(String[] args) {
            int[] nums={1,3,4,2,5,6,7,8,9};
            Arrays.sort(nums);
            System.out.println("Second smallest number: "+nums[1]);
    }
}
//-----------------------------------------------------------------------------------
class zoho34//number of elements in array
{
    public static void main(String[] args) {
            int[] nums={1,3,4,3,4,5,6,7,2,5,6,7,8,9};
           
            System.out.println("Numbers of elements present in array "+nums.length);
    }
}
//-----------------------------------------------------------------------------------
class zoho35//copy one array to another array
{
    public static void main(String[] args) {
            int[] nums={1,3,4,3,4,5,6,7,2,5,6,7,8,9};
            int[] copy=new int[nums.length];
            for(int i=0;i<nums.length;i++)
            {
              copy[i]=nums[i];
              System.out.print(copy[i]+" ");
            }
            
    }
}
//------------------------------------------------------------------------------------------
class zoho36//frequency of an array elements
{
    public static void main(String[] args) {
        int[] arr = {1,1,1,6};
      int[] freq = new int[arr.length];
  
      for (int i = 0; i < arr.length; i++) 
      {
        freq[i] = 1;
        for (int j = 0; j < i; j++)
        
         {
          if (arr[i] == arr[j]) 
          {
            freq[i] = freq[j] + 1;
            freq[j] = 0;
          }
         }
        }
      for (int i = 0; i < arr.length; i++) 
      {
        if (freq[i] != 0) 
        {
          System.out.println( arr[i] + " -> " + freq[i]);
        }
      }
    }
}
//--------------------------------------------------------------------------------
class zoho37//reverse of an array element
{
    public static void main(String[] args) {
        String names[]={"Abi","Bala","Dinesh","Mani","Kumar"};
        System.out.println("Original Array");
        for(int i=0;i<names.length;i++)
        {
            System.out.print(names[i]+" ");
        }
        System.out.println("");
        System.out.println("Reverse of Array");
        for(int i=names.length-1;i>=0;i--)
        {
            System.out.print(names[i]+" ");
        }
    }
}
//-----------------------------------------------------------------
class zoho38 //delete the the element from array;
{
    public static void main(String[] args) {
        int nums[]={1,2,3,4,5,6,7,8};
        int delete=5;
        System.out.println("before Deleting "+delete);
        for(int i=0;i<nums.length;i++)
        {
            System.out.print(nums[i]+" ");
        }
        int num[]=new int[nums.length-1];
        int j=0;
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]!=delete)
            {
            num[j++]=nums[i];
            }
        }
        System.out.println("");
        System.out.println("After deleting "+delete );
        for(int i=0;i<j;i++)
        {
            System.out.print(num[i]+" ");
        }
    }
}

//-----------------------------------------------------------------
class zoho39//Average ofan array element
{
    public static void main(String[] args) {
        int nums[]={1,2,3,4,5,6,7,8};
        int sum=0;
        for(int i=0;i<nums.length;i++)
        {
            System.out.print(nums[i]+" ");
            sum+=nums[i];
        }
        System.out.println("");
        int avg=sum/nums.length;
        System.out.println("Average: "+avg);

    }
}
//-----------------------------------------------------------------------------
class zoho40//inverse of array element
{
    public static void main(String[] args) {
        int nums[]={1,2,3,4};
        double[] inver=new double[nums.length];
        
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]!=0)
            {
                inver[i]= 1.0/nums[i];
            }
            else
            {
                System.out.println("zero couldnot be inversible");
            }
        }
        for(double n:inver)
        {
            System.out.print(n+" ");
        }
    }
}
//---------------------------------------------------------------------------------------------------
